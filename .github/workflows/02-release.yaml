name: 02-create_release

on:
  push:
    tags:
    # - 'v*.*.*-rc.*' # Comment out since the re-tagging process is not yet implemented
    - 'v*.*.*'


jobs:
  tag-validator:
    id: retag     
    outputs:
      NEW_TAG: ${{ steps.tag-calculator.outputs.NEW_TAG }}
    env:
      ORIGINAL_TAG=${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - name: tag validator
        run: |
          SUB='rc'
          if [[ "${{ env.ORIGINAL_TAG }}" == *"$SUB"* ]]; then
              echo "Release candidate tag found."
          else
              echo "Release candidate tag not found."
              exit 1
          fi

      - name: tag-calculator
        run: | 
          NEW_TAG=
          echo "Original tag: ${{ env.ORIGINAL_TAG }}"
          NEW_TAG=$(echo ${{ env.ORIGINAL_TAG }} | awk -F '-rc' '{print $1}')
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: echo new tag
        run: echo ${{ steps.tag-calculator.outputs.NEW_TAG }}


  binary-build:
    needs: [tag validator]
    if: ${{ github.ref_name  == 'master' || 
              github.ref_name  == 'main' }}
    #         contains( github.event.pull_request.labels.*.name, 'trigger-integration-test') && 
    #         github.event.pull_request.base.ref == 'master' }} ## run only if labeled as "trigger-integration-test" and base branch is master
    uses: ./.github/workflows/b-binary-build-and-e2e-tests.yaml
    with:
      COMPONENT_NAME: kubescape
      CGO_ENABLED: 0
      GO111MODULE: ""
      GO_VERSION: "1.19"
      EVENT_NAME: ${{ github.event_name }} 
      RELEASE: ${{ github.ref_name}}
      CLIENT: release
      # BINARY_TESTS: '[
      #                 "scan_nsa"
                    # ]'
      # BINARY_TESTS: '[
      #                 "scan_nsa",                                                                                            
      #                 "scan_mitre",                                                                                          
      #                 "scan_with_exceptions",                                                                                
      #                 "scan_repository",                                                                                     
      #                 "scan_local_file",                                                                                     
      #                 "scan_local_glob_files",                                                                               
      #                 "scan_local_list_of_files",                                                                            
      #                 "scan_nsa_and_submit_to_backend",                                                                      
      #                 "scan_mitre_and_submit_to_backend",                                                                    
      #                 "scan_local_repository_and_submit_to_backend",                                                         
      #                 "scan_repository_from_url_and_submit_to_backend",                                                      
      #                 "scan_with_exception_to_backend",                                                                      
      #                 "scan_with_custom_framework",                                                                                                                                                               
      #                 "scan_customer_configuration",                                                                         
      #                 "host_scanner"
      #               ]'
    secrets: inherit

  # retag:
  #   needs: [binary-build]
  #   runs-on: ubuntu-latest
  #   # outputs:
  #   #   NEW_TAG: ${{ steps.retag.outputs.NEW_TAG }}
  #   # id: retag
  #   steps:
  #     - name: tag-calculator
  #       run: | 
  #         TAG=${{  github.ref_name }}
  #         SPLITTED_TAG=
  #         echo "Original tag: $TAG"
  #         SPLITTED_TAG=$(echo $TAG | awk -F '-rc' '{print $1}')
  #         echo "New tag: $SPLITTED_TAG"
  #         echo "NEW_TAG=$SPLITTED_TAG" >> $GITHUB_OUTPUT

  #     - name: echo new tag
  #       run: echo ${{ steps.retag.outputs.NEW_TAG }}

  create-release:
    needs: [retag]
    uses: ./.github/workflows/c-create-release.yaml
    with:
      RELEASE_NAME: "Release ${{ needs.retag.outputs.NEW_TAG }}"
      TAG_NAME: ${{ needs.retag.outputs.NEW_TAG }}
      DRAFT: false
    secrets: inherit    


  # integration-test:
  #   if: ${{ label == e2e-tests }}

  # re-tag:
  #   # if tests passed, create new tag without `rc`
    
  # create-release:
  #   uses: ./.github/workflows/01-create-release.yaml
  #   needs: test
  #   with:
  #     release_name: "Release ${{ github.ref_name}}"
  #     tag: ${{ github.ref_name}}
  #   secrets: inherit

  # publish-artifacts:
  #   uses: ./.github/workflows/02-publish-artifacts.yaml
  #   needs: create-release
  #   with:
  #     upload_url: ${{ needs.create-release.outputs.upload_url }}
  #     release: "${{ github.ref_name}}"
  #   secrets: inherit
       







  # publish-image:
  #   uses: ./.github/workflows/03-publish-image.yaml
  #   needs: create-release
  #   with:
  #     client: "image-release"
  #     image_name: "quay.io/${{ github.repository_owner }}/kubescape"
  #     image_tag: "${{ github.ref_name}}"
  #     support_platforms: true
  #     cosign: true
  #   secrets: inherit
